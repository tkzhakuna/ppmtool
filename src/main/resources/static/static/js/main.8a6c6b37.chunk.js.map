{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["createProject","project","id","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","props","deleteProject","this","className","projectIdentifier","projectName","owner","fullName","description","Link","to","security","user","role","onClick","bind","Component","connect","state","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","get","res","setJWTToken","token","defaults","headers","common","getUsers","logout","localStorage","removeItem","Header","location","href","headerLinks","validToken","userIsAuthenticated","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","handleOwnerChange","nextProps","setState","e","target","name","value","val","preventDefault","newProject","users","classnames","placeholder","classNamePrefix","getOptionLabel","isOptionSelected","getOptionValue","options","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8a6c6b37.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project,id, history) => async dispatch => {\n  try {\n    await axios.post(`/api/project/${id}`, project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const GET_USERS = \"GET_USERS\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <h6>Done By: {project.owner.fullName}</h6>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n              <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                {(this.props.security.user.role==='ADMIN')&&<Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>}\n\n                {(this.props.security.user.role==='ADMIN')&& <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n             {(this.props.security.user.role==='ADMIN')&& <CreateProjectButton />}\n\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER,GET_USERS } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getUsers = () => async dispatch => {\n  const res = await axios.get(\"/api/users/all\");\n  dispatch({\n    type: GET_USERS,\n    payload: res.data\n  });\n};\n\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport { getUsers } from \"../../actions/securityActions\";\nimport Select from 'react-select';\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      owner: {},\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleOwnerChange=this.handleOwnerChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getUsers();\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleOwnerChange(val) {\n    \n    this.setState({owner:val});\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    \n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n      \n    };\n    this.props.createProject(newProject,this.state.owner.id, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    const { users } = this.props.security;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Owner</h6>\n                  <div className=\"form-group\">\n                    \n                    <Select\n                      className=\"select-owner\"\n                      classNamePrefix=\"name-select\"\n                      onChange={this.handleOwnerChange}\n                      getOptionLabel={(user) => `${user.fullName}`}\n                      isOptionSelected={true}\n                      getOptionValue={(user) => `${user}`}\n                      options={users}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  getUsers: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject,getUsers })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER,GET_USERS } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {},\n  users:[]\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n      case GET_USERS:\n        return {\n          ...state,\n          users: action.payload\n        };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { getUsers } from \"../../actions/securityActions\";\nimport Select from 'react-select';\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      owner:{},\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleOwnerChange=this.handleOwnerChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n      owner\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n      owner\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n    getUsers();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleOwnerChange(val) {\n   \n    this.setState({owner:val});\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n      \n    };\n\n    this.props.createProject(updateProject,this.state.owner.id, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    const { users } = this.props.security;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Owner</h6>\n                  <div className=\"form-group\">\n                    \n                    <Select\n                    value={this.state.owner}\n                      className=\"select-owner\"\n                      classNamePrefix=\"name-select\"\n                      onChange={this.handleOwnerChange}\n                      getOptionLabel={(user) => `${user.fullName}`}\n                      isOptionSelected={true}\n                      getOptionValue={(user) => `${user}`}\n                      options={users}\n                    />\n                  </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  getUsers: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject,getUsers }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          {(this.props.security.user.role==='USER')&& <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n            </Link>}\n\n            {(this.props.security.user.role==='USER')&& <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>}\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              // insert tasks here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        //PROJECT IDENTIFIER BUG\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        {(this.props.security.user.role==='USER')&&<Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>}\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}